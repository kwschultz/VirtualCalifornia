# Makefile.in generated by automake 1.12.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/virtual_california
pkgincludedir = $(includedir)/virtual_california
pkglibdir = $(libdir)/virtual_california
pkglibexecdir = $(libexecdir)/virtual_california
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin12.4.0
host_triplet = x86_64-apple-darwin12.4.0
bin_PROGRAMS = vc$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_lib_hdf5.m4 \
	$(top_srcdir)/m4/ax_mpi.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = vc-ConfigFile.$(OBJEXT) vc-GreensFunctions.$(OBJEXT) \
	vc-MPIDebugOutputStream.$(OBJEXT)
am__objects_2 = vc-AddAsperities.$(OBJEXT) vc-AddNoise.$(OBJEXT) \
	vc-BadFaultKill.$(OBJEXT) vc-BASSAftershocks.$(OBJEXT) \
	vc-BGPoissonEvents.$(OBJEXT) vc-BlockValCompute.$(OBJEXT) \
	vc-DepthDepVelocity.$(OBJEXT) vc-EventRecorder.$(OBJEXT) \
	vc-GracefulQuit.$(OBJEXT) vc-GreensInit.$(OBJEXT) \
	vc-GreensKillInteraction.$(OBJEXT) \
	vc-ProgressMonitor.$(OBJEXT) vc-RunEvent.$(OBJEXT) \
	vc-SanityCheck.$(OBJEXT) vc-UpdateBlockStress.$(OBJEXT)
am__objects_3 = vc-CheckpointFileOutput.$(OBJEXT) \
	vc-CheckpointFileParse.$(OBJEXT) vc-EqSimFileOutput.$(OBJEXT) \
	vc-EqSimFileParse.$(OBJEXT) vc-GreensFileOutput.$(OBJEXT) \
	vc-HDF5Data.$(OBJEXT) vc-HDF5DataShare.$(OBJEXT) \
	vc-SystemFileOutput.$(OBJEXT)
am__objects_4 = vc-SimFramework.$(OBJEXT) vc-SimTimer.$(OBJEXT) \
	vc-VCBlock.$(OBJEXT) vc-VCComm.$(OBJEXT) \
	vc-VCCommPartition.$(OBJEXT) vc-VCCommSpecExec.$(OBJEXT) \
	vc-VCEvent.$(OBJEXT) vc-VCInitBlocks.$(OBJEXT) \
	vc-VCParams.$(OBJEXT) vc-VCSimData.$(OBJEXT) \
	vc-VCSimDataBlocks.$(OBJEXT) vc-VCSimDataEvents.$(OBJEXT) \
	vc-VCSimulation.$(OBJEXT)
am_vc_OBJECTS = vc-main.$(OBJEXT) $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4)
vc_OBJECTS = $(am_vc_OBJECTS)
vc_LDADD = $(LDADD)
vc_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(vc_CXXFLAGS) $(CXXFLAGS) $(vc_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(vc_SOURCES)
DIST_SOURCES = $(vc_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/sachs/Documents/old_VC/VirtualCaliforniaGITHUB/vcal/missing --run aclocal-1.12
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /Users/sachs/Documents/old_VC/VirtualCaliforniaGITHUB/vcal/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/sachs/Documents/old_VC/VirtualCaliforniaGITHUB/vcal/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/sachs/Documents/old_VC/VirtualCaliforniaGITHUB/vcal/missing --run automake-1.12
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
H5CC = /opt/local/bin/h5cc
H5FC = -n /opt/local/bin/h5fc
HDF5_CFLAGS =  -pipe -Os 
HDF5_CPPFLAGS =  -I/opt/local/include
HDF5_FFLAGS = 
HDF5_FLIBS = 
HDF5_LDFLAGS =  -L/opt/local/lib -Wl,-headerpad_max_install_names  -lhdf5_hl -lhdf5   -lz -ldl -lm 
HDF5_VERSION = 1.8.11
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/llvm-gcc-4.2/libexec/gcc/i686-apple-darwin11/4.2.1/ld
LDFLAGS = 
LIBOBJS = 
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/sachs/Documents/old_VC/VirtualCaliforniaGITHUB/vcal/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = .././install-sh -c -d
MPICC = gcc
MPILIBS = 
NM = /opt/local/bin/nm
NMEDIT = nmedit
OBJDUMP = false
OBJEXT = o
OPENMP_CFLAGS = -fopenmp
OTOOL = otool
OTOOL64 = :
PACKAGE = virtual_california
PACKAGE_BUGREPORT = BUG-REPORT-ADDRESS
PACKAGE_NAME = virtual_california
PACKAGE_STRING = virtual_california 2.0
PACKAGE_TARNAME = virtual_california
PACKAGE_URL = 
PACKAGE_VERSION = 2.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /opt/local/bin/gsed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 2.0
abs_builddir = /Users/sachs/Documents/old_VC/VirtualCaliforniaGITHUB/vcal/src
abs_srcdir = /Users/sachs/Documents/old_VC/VirtualCaliforniaGITHUB/vcal/src
abs_top_builddir = /Users/sachs/Documents/old_VC/VirtualCaliforniaGITHUB/vcal
abs_top_srcdir = /Users/sachs/Documents/old_VC/VirtualCaliforniaGITHUB/vcal
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin12.4.0
build_alias = 
build_cpu = x86_64
build_os = darwin12.4.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin12.4.0
host_alias = 
host_cpu = x86_64
host_os = darwin12.4.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/sachs/Documents/old_VC/VirtualCaliforniaGITHUB/vcal/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  quakelib/
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
VC_MISC = \
	$(srcdir)/misc/ConfigFile.cpp \
	$(srcdir)/misc/ConfigFile.h \
	$(srcdir)/misc/GreensFunctions.cpp \
	$(srcdir)/misc/GreensFunctions.h \
	$(srcdir)/misc/MPIDebugOutputStream.cpp \
	$(srcdir)/misc/MPIDebugOutputStream.h

VC_SIMULATION = \
	$(srcdir)/simulation/AddAsperities.cpp \
	$(srcdir)/simulation/AddAsperities.h \
	$(srcdir)/simulation/AddNoise.cpp \
	$(srcdir)/simulation/AddNoise.h \
	$(srcdir)/simulation/BadFaultKill.cpp \
	$(srcdir)/simulation/BadFaultKill.h \
	$(srcdir)/simulation/BASSAftershocks.cpp \
	$(srcdir)/simulation/BASSAftershocks.h \
	$(srcdir)/simulation/BGPoissonEvents.cpp \
	$(srcdir)/simulation/BGPoissonEvents.h \
	$(srcdir)/simulation/BlockValCompute.cpp \
	$(srcdir)/simulation/BlockValCompute.h \
	$(srcdir)/simulation/DepthDepVelocity.cpp \
	$(srcdir)/simulation/DepthDepVelocity.h \
	$(srcdir)/simulation/EventRecorder.cpp \
	$(srcdir)/simulation/EventRecorder.h \
	$(srcdir)/simulation/GracefulQuit.cpp \
	$(srcdir)/simulation/GracefulQuit.h \
	$(srcdir)/simulation/GreensInit.cpp \
	$(srcdir)/simulation/GreensInit.h \
	$(srcdir)/simulation/GreensKillInteraction.cpp \
	$(srcdir)/simulation/GreensKillInteraction.h \
	$(srcdir)/simulation/ProgressMonitor.cpp \
	$(srcdir)/simulation/ProgressMonitor.h \
	$(srcdir)/simulation/RunEvent.cpp \
	$(srcdir)/simulation/RunEvent.h \
	$(srcdir)/simulation/SanityCheck.cpp \
	$(srcdir)/simulation/SanityCheck.h \
	$(srcdir)/simulation/UpdateBlockStress.cpp \
	$(srcdir)/simulation/UpdateBlockStress.h

VC_IO = \
	$(srcdir)/io/CheckpointFileOutput.cpp \
	$(srcdir)/io/CheckpointFileOutput.h \
	$(srcdir)/io/CheckpointFileParse.cpp \
	$(srcdir)/io/CheckpointFileParse.h \
	$(srcdir)/io/EqSimFileOutput.cpp \
	$(srcdir)/io/EqSimFileOutput.h \
	$(srcdir)/io/EqSimFileParse.cpp \
	$(srcdir)/io/EqSimFileParse.h \
	$(srcdir)/io/GreensFileOutput.cpp \
	$(srcdir)/io/GreensFileOutput.h \
	$(srcdir)/io/HDF5Data.cpp \
	$(srcdir)/io/HDF5Data.h \
	$(srcdir)/io/HDF5DataShare.cpp \
	$(srcdir)/io/HDF5DataShare.h \
	$(srcdir)/io/SystemFileOutput.cpp \
	$(srcdir)/io/SystemFileOutput.h

VC_CORE = \
	$(srcdir)/core/SimError.h \
	$(srcdir)/core/SimFramework.cpp \
	$(srcdir)/core/SimFramework.h \
	$(srcdir)/core/SimTimer.cpp \
	$(srcdir)/core/SimTimer.h \
	$(srcdir)/core/VCBlock.cpp \
	$(srcdir)/core/VCBlock.h \
	$(srcdir)/core/VCComm.cpp \
	$(srcdir)/core/VCComm.h \
	$(srcdir)/core/VCCommPartition.cpp \
	$(srcdir)/core/VCCommPartition.h \
	$(srcdir)/core/VCCommSpecExec.cpp \
	$(srcdir)/core/VCCommSpecExec.h \
	$(srcdir)/core/VCEvent.cpp \
	$(srcdir)/core/VCEvent.h \
	$(srcdir)/core/VCInitBlocks.cpp \
	$(srcdir)/core/VCInitBlocks.h \
	$(srcdir)/core/VCParams.cpp \
	$(srcdir)/core/VCParams.h \
	$(srcdir)/core/VCSimData.cpp \
	$(srcdir)/core/VCSimData.h \
	$(srcdir)/core/VCSimDataBlocks.cpp \
	$(srcdir)/core/VCSimDataBlocks.h \
	$(srcdir)/core/VCSimDataEvents.cpp \
	$(srcdir)/core/VCSimDataEvents.h \
	$(srcdir)/core/VCSimulation.cpp \
	$(srcdir)/core/VCSimulation.h

vc_CXXFLAGS = $(CXXFLAGS) $(OPENMP_CFLAGS) $(HDF5_CPPFLAGS) -I$(srcdir)/../quakelib/src -I$(srcdir)/core -I$(srcdir)/io -I$(srcdir)/simulation -I$(srcdir)/graphics -I$(srcdir)/misc
vc_LDFLAGS = $(HDF5_LDFLAGS) -L$(srcdir)/../quakelib/.libs -lquake-1.0
vc_SOURCES = main.cpp $(VC_MISC) $(VC_SIMULATION) $(VC_IO) $(VC_CORE)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
vc$(EXEEXT): $(vc_OBJECTS) $(vc_DEPENDENCIES) $(EXTRA_vc_DEPENDENCIES) 
	@rm -f vc$(EXEEXT)
	$(vc_LINK) $(vc_OBJECTS) $(vc_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/vc-AddAsperities.Po
include ./$(DEPDIR)/vc-AddNoise.Po
include ./$(DEPDIR)/vc-BASSAftershocks.Po
include ./$(DEPDIR)/vc-BGPoissonEvents.Po
include ./$(DEPDIR)/vc-BadFaultKill.Po
include ./$(DEPDIR)/vc-BlockValCompute.Po
include ./$(DEPDIR)/vc-CheckpointFileOutput.Po
include ./$(DEPDIR)/vc-CheckpointFileParse.Po
include ./$(DEPDIR)/vc-ConfigFile.Po
include ./$(DEPDIR)/vc-DepthDepVelocity.Po
include ./$(DEPDIR)/vc-EqSimFileOutput.Po
include ./$(DEPDIR)/vc-EqSimFileParse.Po
include ./$(DEPDIR)/vc-EventRecorder.Po
include ./$(DEPDIR)/vc-GracefulQuit.Po
include ./$(DEPDIR)/vc-GreensFileOutput.Po
include ./$(DEPDIR)/vc-GreensFunctions.Po
include ./$(DEPDIR)/vc-GreensInit.Po
include ./$(DEPDIR)/vc-GreensKillInteraction.Po
include ./$(DEPDIR)/vc-HDF5Data.Po
include ./$(DEPDIR)/vc-HDF5DataShare.Po
include ./$(DEPDIR)/vc-MPIDebugOutputStream.Po
include ./$(DEPDIR)/vc-ProgressMonitor.Po
include ./$(DEPDIR)/vc-RunEvent.Po
include ./$(DEPDIR)/vc-SanityCheck.Po
include ./$(DEPDIR)/vc-SimFramework.Po
include ./$(DEPDIR)/vc-SimTimer.Po
include ./$(DEPDIR)/vc-SystemFileOutput.Po
include ./$(DEPDIR)/vc-UpdateBlockStress.Po
include ./$(DEPDIR)/vc-VCBlock.Po
include ./$(DEPDIR)/vc-VCComm.Po
include ./$(DEPDIR)/vc-VCCommPartition.Po
include ./$(DEPDIR)/vc-VCCommSpecExec.Po
include ./$(DEPDIR)/vc-VCEvent.Po
include ./$(DEPDIR)/vc-VCInitBlocks.Po
include ./$(DEPDIR)/vc-VCParams.Po
include ./$(DEPDIR)/vc-VCSimData.Po
include ./$(DEPDIR)/vc-VCSimDataBlocks.Po
include ./$(DEPDIR)/vc-VCSimDataEvents.Po
include ./$(DEPDIR)/vc-VCSimulation.Po
include ./$(DEPDIR)/vc-main.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

vc-main.o: main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-main.o -MD -MP -MF $(DEPDIR)/vc-main.Tpo -c -o vc-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
	$(am__mv) $(DEPDIR)/vc-main.Tpo $(DEPDIR)/vc-main.Po
#	source='main.cpp' object='vc-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

vc-main.obj: main.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-main.obj -MD -MP -MF $(DEPDIR)/vc-main.Tpo -c -o vc-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-main.Tpo $(DEPDIR)/vc-main.Po
#	source='main.cpp' object='vc-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

vc-ConfigFile.o: $(srcdir)/misc/ConfigFile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-ConfigFile.o -MD -MP -MF $(DEPDIR)/vc-ConfigFile.Tpo -c -o vc-ConfigFile.o `test -f '$(srcdir)/misc/ConfigFile.cpp' || echo '$(srcdir)/'`$(srcdir)/misc/ConfigFile.cpp
	$(am__mv) $(DEPDIR)/vc-ConfigFile.Tpo $(DEPDIR)/vc-ConfigFile.Po
#	source='$(srcdir)/misc/ConfigFile.cpp' object='vc-ConfigFile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-ConfigFile.o `test -f '$(srcdir)/misc/ConfigFile.cpp' || echo '$(srcdir)/'`$(srcdir)/misc/ConfigFile.cpp

vc-ConfigFile.obj: $(srcdir)/misc/ConfigFile.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-ConfigFile.obj -MD -MP -MF $(DEPDIR)/vc-ConfigFile.Tpo -c -o vc-ConfigFile.obj `if test -f '$(srcdir)/misc/ConfigFile.cpp'; then $(CYGPATH_W) '$(srcdir)/misc/ConfigFile.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/misc/ConfigFile.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-ConfigFile.Tpo $(DEPDIR)/vc-ConfigFile.Po
#	source='$(srcdir)/misc/ConfigFile.cpp' object='vc-ConfigFile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-ConfigFile.obj `if test -f '$(srcdir)/misc/ConfigFile.cpp'; then $(CYGPATH_W) '$(srcdir)/misc/ConfigFile.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/misc/ConfigFile.cpp'; fi`

vc-GreensFunctions.o: $(srcdir)/misc/GreensFunctions.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-GreensFunctions.o -MD -MP -MF $(DEPDIR)/vc-GreensFunctions.Tpo -c -o vc-GreensFunctions.o `test -f '$(srcdir)/misc/GreensFunctions.cpp' || echo '$(srcdir)/'`$(srcdir)/misc/GreensFunctions.cpp
	$(am__mv) $(DEPDIR)/vc-GreensFunctions.Tpo $(DEPDIR)/vc-GreensFunctions.Po
#	source='$(srcdir)/misc/GreensFunctions.cpp' object='vc-GreensFunctions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-GreensFunctions.o `test -f '$(srcdir)/misc/GreensFunctions.cpp' || echo '$(srcdir)/'`$(srcdir)/misc/GreensFunctions.cpp

vc-GreensFunctions.obj: $(srcdir)/misc/GreensFunctions.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-GreensFunctions.obj -MD -MP -MF $(DEPDIR)/vc-GreensFunctions.Tpo -c -o vc-GreensFunctions.obj `if test -f '$(srcdir)/misc/GreensFunctions.cpp'; then $(CYGPATH_W) '$(srcdir)/misc/GreensFunctions.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/misc/GreensFunctions.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-GreensFunctions.Tpo $(DEPDIR)/vc-GreensFunctions.Po
#	source='$(srcdir)/misc/GreensFunctions.cpp' object='vc-GreensFunctions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-GreensFunctions.obj `if test -f '$(srcdir)/misc/GreensFunctions.cpp'; then $(CYGPATH_W) '$(srcdir)/misc/GreensFunctions.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/misc/GreensFunctions.cpp'; fi`

vc-MPIDebugOutputStream.o: $(srcdir)/misc/MPIDebugOutputStream.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-MPIDebugOutputStream.o -MD -MP -MF $(DEPDIR)/vc-MPIDebugOutputStream.Tpo -c -o vc-MPIDebugOutputStream.o `test -f '$(srcdir)/misc/MPIDebugOutputStream.cpp' || echo '$(srcdir)/'`$(srcdir)/misc/MPIDebugOutputStream.cpp
	$(am__mv) $(DEPDIR)/vc-MPIDebugOutputStream.Tpo $(DEPDIR)/vc-MPIDebugOutputStream.Po
#	source='$(srcdir)/misc/MPIDebugOutputStream.cpp' object='vc-MPIDebugOutputStream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-MPIDebugOutputStream.o `test -f '$(srcdir)/misc/MPIDebugOutputStream.cpp' || echo '$(srcdir)/'`$(srcdir)/misc/MPIDebugOutputStream.cpp

vc-MPIDebugOutputStream.obj: $(srcdir)/misc/MPIDebugOutputStream.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-MPIDebugOutputStream.obj -MD -MP -MF $(DEPDIR)/vc-MPIDebugOutputStream.Tpo -c -o vc-MPIDebugOutputStream.obj `if test -f '$(srcdir)/misc/MPIDebugOutputStream.cpp'; then $(CYGPATH_W) '$(srcdir)/misc/MPIDebugOutputStream.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/misc/MPIDebugOutputStream.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-MPIDebugOutputStream.Tpo $(DEPDIR)/vc-MPIDebugOutputStream.Po
#	source='$(srcdir)/misc/MPIDebugOutputStream.cpp' object='vc-MPIDebugOutputStream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-MPIDebugOutputStream.obj `if test -f '$(srcdir)/misc/MPIDebugOutputStream.cpp'; then $(CYGPATH_W) '$(srcdir)/misc/MPIDebugOutputStream.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/misc/MPIDebugOutputStream.cpp'; fi`

vc-AddAsperities.o: $(srcdir)/simulation/AddAsperities.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-AddAsperities.o -MD -MP -MF $(DEPDIR)/vc-AddAsperities.Tpo -c -o vc-AddAsperities.o `test -f '$(srcdir)/simulation/AddAsperities.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/AddAsperities.cpp
	$(am__mv) $(DEPDIR)/vc-AddAsperities.Tpo $(DEPDIR)/vc-AddAsperities.Po
#	source='$(srcdir)/simulation/AddAsperities.cpp' object='vc-AddAsperities.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-AddAsperities.o `test -f '$(srcdir)/simulation/AddAsperities.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/AddAsperities.cpp

vc-AddAsperities.obj: $(srcdir)/simulation/AddAsperities.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-AddAsperities.obj -MD -MP -MF $(DEPDIR)/vc-AddAsperities.Tpo -c -o vc-AddAsperities.obj `if test -f '$(srcdir)/simulation/AddAsperities.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/AddAsperities.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/AddAsperities.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-AddAsperities.Tpo $(DEPDIR)/vc-AddAsperities.Po
#	source='$(srcdir)/simulation/AddAsperities.cpp' object='vc-AddAsperities.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-AddAsperities.obj `if test -f '$(srcdir)/simulation/AddAsperities.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/AddAsperities.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/AddAsperities.cpp'; fi`

vc-AddNoise.o: $(srcdir)/simulation/AddNoise.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-AddNoise.o -MD -MP -MF $(DEPDIR)/vc-AddNoise.Tpo -c -o vc-AddNoise.o `test -f '$(srcdir)/simulation/AddNoise.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/AddNoise.cpp
	$(am__mv) $(DEPDIR)/vc-AddNoise.Tpo $(DEPDIR)/vc-AddNoise.Po
#	source='$(srcdir)/simulation/AddNoise.cpp' object='vc-AddNoise.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-AddNoise.o `test -f '$(srcdir)/simulation/AddNoise.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/AddNoise.cpp

vc-AddNoise.obj: $(srcdir)/simulation/AddNoise.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-AddNoise.obj -MD -MP -MF $(DEPDIR)/vc-AddNoise.Tpo -c -o vc-AddNoise.obj `if test -f '$(srcdir)/simulation/AddNoise.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/AddNoise.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/AddNoise.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-AddNoise.Tpo $(DEPDIR)/vc-AddNoise.Po
#	source='$(srcdir)/simulation/AddNoise.cpp' object='vc-AddNoise.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-AddNoise.obj `if test -f '$(srcdir)/simulation/AddNoise.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/AddNoise.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/AddNoise.cpp'; fi`

vc-BadFaultKill.o: $(srcdir)/simulation/BadFaultKill.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-BadFaultKill.o -MD -MP -MF $(DEPDIR)/vc-BadFaultKill.Tpo -c -o vc-BadFaultKill.o `test -f '$(srcdir)/simulation/BadFaultKill.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/BadFaultKill.cpp
	$(am__mv) $(DEPDIR)/vc-BadFaultKill.Tpo $(DEPDIR)/vc-BadFaultKill.Po
#	source='$(srcdir)/simulation/BadFaultKill.cpp' object='vc-BadFaultKill.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-BadFaultKill.o `test -f '$(srcdir)/simulation/BadFaultKill.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/BadFaultKill.cpp

vc-BadFaultKill.obj: $(srcdir)/simulation/BadFaultKill.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-BadFaultKill.obj -MD -MP -MF $(DEPDIR)/vc-BadFaultKill.Tpo -c -o vc-BadFaultKill.obj `if test -f '$(srcdir)/simulation/BadFaultKill.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/BadFaultKill.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/BadFaultKill.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-BadFaultKill.Tpo $(DEPDIR)/vc-BadFaultKill.Po
#	source='$(srcdir)/simulation/BadFaultKill.cpp' object='vc-BadFaultKill.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-BadFaultKill.obj `if test -f '$(srcdir)/simulation/BadFaultKill.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/BadFaultKill.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/BadFaultKill.cpp'; fi`

vc-BASSAftershocks.o: $(srcdir)/simulation/BASSAftershocks.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-BASSAftershocks.o -MD -MP -MF $(DEPDIR)/vc-BASSAftershocks.Tpo -c -o vc-BASSAftershocks.o `test -f '$(srcdir)/simulation/BASSAftershocks.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/BASSAftershocks.cpp
	$(am__mv) $(DEPDIR)/vc-BASSAftershocks.Tpo $(DEPDIR)/vc-BASSAftershocks.Po
#	source='$(srcdir)/simulation/BASSAftershocks.cpp' object='vc-BASSAftershocks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-BASSAftershocks.o `test -f '$(srcdir)/simulation/BASSAftershocks.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/BASSAftershocks.cpp

vc-BASSAftershocks.obj: $(srcdir)/simulation/BASSAftershocks.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-BASSAftershocks.obj -MD -MP -MF $(DEPDIR)/vc-BASSAftershocks.Tpo -c -o vc-BASSAftershocks.obj `if test -f '$(srcdir)/simulation/BASSAftershocks.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/BASSAftershocks.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/BASSAftershocks.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-BASSAftershocks.Tpo $(DEPDIR)/vc-BASSAftershocks.Po
#	source='$(srcdir)/simulation/BASSAftershocks.cpp' object='vc-BASSAftershocks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-BASSAftershocks.obj `if test -f '$(srcdir)/simulation/BASSAftershocks.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/BASSAftershocks.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/BASSAftershocks.cpp'; fi`

vc-BGPoissonEvents.o: $(srcdir)/simulation/BGPoissonEvents.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-BGPoissonEvents.o -MD -MP -MF $(DEPDIR)/vc-BGPoissonEvents.Tpo -c -o vc-BGPoissonEvents.o `test -f '$(srcdir)/simulation/BGPoissonEvents.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/BGPoissonEvents.cpp
	$(am__mv) $(DEPDIR)/vc-BGPoissonEvents.Tpo $(DEPDIR)/vc-BGPoissonEvents.Po
#	source='$(srcdir)/simulation/BGPoissonEvents.cpp' object='vc-BGPoissonEvents.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-BGPoissonEvents.o `test -f '$(srcdir)/simulation/BGPoissonEvents.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/BGPoissonEvents.cpp

vc-BGPoissonEvents.obj: $(srcdir)/simulation/BGPoissonEvents.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-BGPoissonEvents.obj -MD -MP -MF $(DEPDIR)/vc-BGPoissonEvents.Tpo -c -o vc-BGPoissonEvents.obj `if test -f '$(srcdir)/simulation/BGPoissonEvents.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/BGPoissonEvents.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/BGPoissonEvents.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-BGPoissonEvents.Tpo $(DEPDIR)/vc-BGPoissonEvents.Po
#	source='$(srcdir)/simulation/BGPoissonEvents.cpp' object='vc-BGPoissonEvents.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-BGPoissonEvents.obj `if test -f '$(srcdir)/simulation/BGPoissonEvents.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/BGPoissonEvents.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/BGPoissonEvents.cpp'; fi`

vc-BlockValCompute.o: $(srcdir)/simulation/BlockValCompute.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-BlockValCompute.o -MD -MP -MF $(DEPDIR)/vc-BlockValCompute.Tpo -c -o vc-BlockValCompute.o `test -f '$(srcdir)/simulation/BlockValCompute.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/BlockValCompute.cpp
	$(am__mv) $(DEPDIR)/vc-BlockValCompute.Tpo $(DEPDIR)/vc-BlockValCompute.Po
#	source='$(srcdir)/simulation/BlockValCompute.cpp' object='vc-BlockValCompute.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-BlockValCompute.o `test -f '$(srcdir)/simulation/BlockValCompute.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/BlockValCompute.cpp

vc-BlockValCompute.obj: $(srcdir)/simulation/BlockValCompute.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-BlockValCompute.obj -MD -MP -MF $(DEPDIR)/vc-BlockValCompute.Tpo -c -o vc-BlockValCompute.obj `if test -f '$(srcdir)/simulation/BlockValCompute.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/BlockValCompute.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/BlockValCompute.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-BlockValCompute.Tpo $(DEPDIR)/vc-BlockValCompute.Po
#	source='$(srcdir)/simulation/BlockValCompute.cpp' object='vc-BlockValCompute.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-BlockValCompute.obj `if test -f '$(srcdir)/simulation/BlockValCompute.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/BlockValCompute.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/BlockValCompute.cpp'; fi`

vc-DepthDepVelocity.o: $(srcdir)/simulation/DepthDepVelocity.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-DepthDepVelocity.o -MD -MP -MF $(DEPDIR)/vc-DepthDepVelocity.Tpo -c -o vc-DepthDepVelocity.o `test -f '$(srcdir)/simulation/DepthDepVelocity.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/DepthDepVelocity.cpp
	$(am__mv) $(DEPDIR)/vc-DepthDepVelocity.Tpo $(DEPDIR)/vc-DepthDepVelocity.Po
#	source='$(srcdir)/simulation/DepthDepVelocity.cpp' object='vc-DepthDepVelocity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-DepthDepVelocity.o `test -f '$(srcdir)/simulation/DepthDepVelocity.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/DepthDepVelocity.cpp

vc-DepthDepVelocity.obj: $(srcdir)/simulation/DepthDepVelocity.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-DepthDepVelocity.obj -MD -MP -MF $(DEPDIR)/vc-DepthDepVelocity.Tpo -c -o vc-DepthDepVelocity.obj `if test -f '$(srcdir)/simulation/DepthDepVelocity.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/DepthDepVelocity.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/DepthDepVelocity.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-DepthDepVelocity.Tpo $(DEPDIR)/vc-DepthDepVelocity.Po
#	source='$(srcdir)/simulation/DepthDepVelocity.cpp' object='vc-DepthDepVelocity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-DepthDepVelocity.obj `if test -f '$(srcdir)/simulation/DepthDepVelocity.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/DepthDepVelocity.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/DepthDepVelocity.cpp'; fi`

vc-EventRecorder.o: $(srcdir)/simulation/EventRecorder.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-EventRecorder.o -MD -MP -MF $(DEPDIR)/vc-EventRecorder.Tpo -c -o vc-EventRecorder.o `test -f '$(srcdir)/simulation/EventRecorder.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/EventRecorder.cpp
	$(am__mv) $(DEPDIR)/vc-EventRecorder.Tpo $(DEPDIR)/vc-EventRecorder.Po
#	source='$(srcdir)/simulation/EventRecorder.cpp' object='vc-EventRecorder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-EventRecorder.o `test -f '$(srcdir)/simulation/EventRecorder.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/EventRecorder.cpp

vc-EventRecorder.obj: $(srcdir)/simulation/EventRecorder.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-EventRecorder.obj -MD -MP -MF $(DEPDIR)/vc-EventRecorder.Tpo -c -o vc-EventRecorder.obj `if test -f '$(srcdir)/simulation/EventRecorder.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/EventRecorder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/EventRecorder.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-EventRecorder.Tpo $(DEPDIR)/vc-EventRecorder.Po
#	source='$(srcdir)/simulation/EventRecorder.cpp' object='vc-EventRecorder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-EventRecorder.obj `if test -f '$(srcdir)/simulation/EventRecorder.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/EventRecorder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/EventRecorder.cpp'; fi`

vc-GracefulQuit.o: $(srcdir)/simulation/GracefulQuit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-GracefulQuit.o -MD -MP -MF $(DEPDIR)/vc-GracefulQuit.Tpo -c -o vc-GracefulQuit.o `test -f '$(srcdir)/simulation/GracefulQuit.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/GracefulQuit.cpp
	$(am__mv) $(DEPDIR)/vc-GracefulQuit.Tpo $(DEPDIR)/vc-GracefulQuit.Po
#	source='$(srcdir)/simulation/GracefulQuit.cpp' object='vc-GracefulQuit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-GracefulQuit.o `test -f '$(srcdir)/simulation/GracefulQuit.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/GracefulQuit.cpp

vc-GracefulQuit.obj: $(srcdir)/simulation/GracefulQuit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-GracefulQuit.obj -MD -MP -MF $(DEPDIR)/vc-GracefulQuit.Tpo -c -o vc-GracefulQuit.obj `if test -f '$(srcdir)/simulation/GracefulQuit.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/GracefulQuit.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/GracefulQuit.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-GracefulQuit.Tpo $(DEPDIR)/vc-GracefulQuit.Po
#	source='$(srcdir)/simulation/GracefulQuit.cpp' object='vc-GracefulQuit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-GracefulQuit.obj `if test -f '$(srcdir)/simulation/GracefulQuit.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/GracefulQuit.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/GracefulQuit.cpp'; fi`

vc-GreensInit.o: $(srcdir)/simulation/GreensInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-GreensInit.o -MD -MP -MF $(DEPDIR)/vc-GreensInit.Tpo -c -o vc-GreensInit.o `test -f '$(srcdir)/simulation/GreensInit.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/GreensInit.cpp
	$(am__mv) $(DEPDIR)/vc-GreensInit.Tpo $(DEPDIR)/vc-GreensInit.Po
#	source='$(srcdir)/simulation/GreensInit.cpp' object='vc-GreensInit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-GreensInit.o `test -f '$(srcdir)/simulation/GreensInit.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/GreensInit.cpp

vc-GreensInit.obj: $(srcdir)/simulation/GreensInit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-GreensInit.obj -MD -MP -MF $(DEPDIR)/vc-GreensInit.Tpo -c -o vc-GreensInit.obj `if test -f '$(srcdir)/simulation/GreensInit.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/GreensInit.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/GreensInit.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-GreensInit.Tpo $(DEPDIR)/vc-GreensInit.Po
#	source='$(srcdir)/simulation/GreensInit.cpp' object='vc-GreensInit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-GreensInit.obj `if test -f '$(srcdir)/simulation/GreensInit.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/GreensInit.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/GreensInit.cpp'; fi`

vc-GreensKillInteraction.o: $(srcdir)/simulation/GreensKillInteraction.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-GreensKillInteraction.o -MD -MP -MF $(DEPDIR)/vc-GreensKillInteraction.Tpo -c -o vc-GreensKillInteraction.o `test -f '$(srcdir)/simulation/GreensKillInteraction.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/GreensKillInteraction.cpp
	$(am__mv) $(DEPDIR)/vc-GreensKillInteraction.Tpo $(DEPDIR)/vc-GreensKillInteraction.Po
#	source='$(srcdir)/simulation/GreensKillInteraction.cpp' object='vc-GreensKillInteraction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-GreensKillInteraction.o `test -f '$(srcdir)/simulation/GreensKillInteraction.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/GreensKillInteraction.cpp

vc-GreensKillInteraction.obj: $(srcdir)/simulation/GreensKillInteraction.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-GreensKillInteraction.obj -MD -MP -MF $(DEPDIR)/vc-GreensKillInteraction.Tpo -c -o vc-GreensKillInteraction.obj `if test -f '$(srcdir)/simulation/GreensKillInteraction.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/GreensKillInteraction.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/GreensKillInteraction.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-GreensKillInteraction.Tpo $(DEPDIR)/vc-GreensKillInteraction.Po
#	source='$(srcdir)/simulation/GreensKillInteraction.cpp' object='vc-GreensKillInteraction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-GreensKillInteraction.obj `if test -f '$(srcdir)/simulation/GreensKillInteraction.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/GreensKillInteraction.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/GreensKillInteraction.cpp'; fi`

vc-ProgressMonitor.o: $(srcdir)/simulation/ProgressMonitor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-ProgressMonitor.o -MD -MP -MF $(DEPDIR)/vc-ProgressMonitor.Tpo -c -o vc-ProgressMonitor.o `test -f '$(srcdir)/simulation/ProgressMonitor.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/ProgressMonitor.cpp
	$(am__mv) $(DEPDIR)/vc-ProgressMonitor.Tpo $(DEPDIR)/vc-ProgressMonitor.Po
#	source='$(srcdir)/simulation/ProgressMonitor.cpp' object='vc-ProgressMonitor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-ProgressMonitor.o `test -f '$(srcdir)/simulation/ProgressMonitor.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/ProgressMonitor.cpp

vc-ProgressMonitor.obj: $(srcdir)/simulation/ProgressMonitor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-ProgressMonitor.obj -MD -MP -MF $(DEPDIR)/vc-ProgressMonitor.Tpo -c -o vc-ProgressMonitor.obj `if test -f '$(srcdir)/simulation/ProgressMonitor.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/ProgressMonitor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/ProgressMonitor.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-ProgressMonitor.Tpo $(DEPDIR)/vc-ProgressMonitor.Po
#	source='$(srcdir)/simulation/ProgressMonitor.cpp' object='vc-ProgressMonitor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-ProgressMonitor.obj `if test -f '$(srcdir)/simulation/ProgressMonitor.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/ProgressMonitor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/ProgressMonitor.cpp'; fi`

vc-RunEvent.o: $(srcdir)/simulation/RunEvent.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-RunEvent.o -MD -MP -MF $(DEPDIR)/vc-RunEvent.Tpo -c -o vc-RunEvent.o `test -f '$(srcdir)/simulation/RunEvent.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/RunEvent.cpp
	$(am__mv) $(DEPDIR)/vc-RunEvent.Tpo $(DEPDIR)/vc-RunEvent.Po
#	source='$(srcdir)/simulation/RunEvent.cpp' object='vc-RunEvent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-RunEvent.o `test -f '$(srcdir)/simulation/RunEvent.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/RunEvent.cpp

vc-RunEvent.obj: $(srcdir)/simulation/RunEvent.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-RunEvent.obj -MD -MP -MF $(DEPDIR)/vc-RunEvent.Tpo -c -o vc-RunEvent.obj `if test -f '$(srcdir)/simulation/RunEvent.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/RunEvent.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/RunEvent.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-RunEvent.Tpo $(DEPDIR)/vc-RunEvent.Po
#	source='$(srcdir)/simulation/RunEvent.cpp' object='vc-RunEvent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-RunEvent.obj `if test -f '$(srcdir)/simulation/RunEvent.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/RunEvent.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/RunEvent.cpp'; fi`

vc-SanityCheck.o: $(srcdir)/simulation/SanityCheck.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-SanityCheck.o -MD -MP -MF $(DEPDIR)/vc-SanityCheck.Tpo -c -o vc-SanityCheck.o `test -f '$(srcdir)/simulation/SanityCheck.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/SanityCheck.cpp
	$(am__mv) $(DEPDIR)/vc-SanityCheck.Tpo $(DEPDIR)/vc-SanityCheck.Po
#	source='$(srcdir)/simulation/SanityCheck.cpp' object='vc-SanityCheck.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-SanityCheck.o `test -f '$(srcdir)/simulation/SanityCheck.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/SanityCheck.cpp

vc-SanityCheck.obj: $(srcdir)/simulation/SanityCheck.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-SanityCheck.obj -MD -MP -MF $(DEPDIR)/vc-SanityCheck.Tpo -c -o vc-SanityCheck.obj `if test -f '$(srcdir)/simulation/SanityCheck.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/SanityCheck.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/SanityCheck.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-SanityCheck.Tpo $(DEPDIR)/vc-SanityCheck.Po
#	source='$(srcdir)/simulation/SanityCheck.cpp' object='vc-SanityCheck.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-SanityCheck.obj `if test -f '$(srcdir)/simulation/SanityCheck.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/SanityCheck.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/SanityCheck.cpp'; fi`

vc-UpdateBlockStress.o: $(srcdir)/simulation/UpdateBlockStress.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-UpdateBlockStress.o -MD -MP -MF $(DEPDIR)/vc-UpdateBlockStress.Tpo -c -o vc-UpdateBlockStress.o `test -f '$(srcdir)/simulation/UpdateBlockStress.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/UpdateBlockStress.cpp
	$(am__mv) $(DEPDIR)/vc-UpdateBlockStress.Tpo $(DEPDIR)/vc-UpdateBlockStress.Po
#	source='$(srcdir)/simulation/UpdateBlockStress.cpp' object='vc-UpdateBlockStress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-UpdateBlockStress.o `test -f '$(srcdir)/simulation/UpdateBlockStress.cpp' || echo '$(srcdir)/'`$(srcdir)/simulation/UpdateBlockStress.cpp

vc-UpdateBlockStress.obj: $(srcdir)/simulation/UpdateBlockStress.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-UpdateBlockStress.obj -MD -MP -MF $(DEPDIR)/vc-UpdateBlockStress.Tpo -c -o vc-UpdateBlockStress.obj `if test -f '$(srcdir)/simulation/UpdateBlockStress.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/UpdateBlockStress.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/UpdateBlockStress.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-UpdateBlockStress.Tpo $(DEPDIR)/vc-UpdateBlockStress.Po
#	source='$(srcdir)/simulation/UpdateBlockStress.cpp' object='vc-UpdateBlockStress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-UpdateBlockStress.obj `if test -f '$(srcdir)/simulation/UpdateBlockStress.cpp'; then $(CYGPATH_W) '$(srcdir)/simulation/UpdateBlockStress.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/simulation/UpdateBlockStress.cpp'; fi`

vc-CheckpointFileOutput.o: $(srcdir)/io/CheckpointFileOutput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-CheckpointFileOutput.o -MD -MP -MF $(DEPDIR)/vc-CheckpointFileOutput.Tpo -c -o vc-CheckpointFileOutput.o `test -f '$(srcdir)/io/CheckpointFileOutput.cpp' || echo '$(srcdir)/'`$(srcdir)/io/CheckpointFileOutput.cpp
	$(am__mv) $(DEPDIR)/vc-CheckpointFileOutput.Tpo $(DEPDIR)/vc-CheckpointFileOutput.Po
#	source='$(srcdir)/io/CheckpointFileOutput.cpp' object='vc-CheckpointFileOutput.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-CheckpointFileOutput.o `test -f '$(srcdir)/io/CheckpointFileOutput.cpp' || echo '$(srcdir)/'`$(srcdir)/io/CheckpointFileOutput.cpp

vc-CheckpointFileOutput.obj: $(srcdir)/io/CheckpointFileOutput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-CheckpointFileOutput.obj -MD -MP -MF $(DEPDIR)/vc-CheckpointFileOutput.Tpo -c -o vc-CheckpointFileOutput.obj `if test -f '$(srcdir)/io/CheckpointFileOutput.cpp'; then $(CYGPATH_W) '$(srcdir)/io/CheckpointFileOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/CheckpointFileOutput.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-CheckpointFileOutput.Tpo $(DEPDIR)/vc-CheckpointFileOutput.Po
#	source='$(srcdir)/io/CheckpointFileOutput.cpp' object='vc-CheckpointFileOutput.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-CheckpointFileOutput.obj `if test -f '$(srcdir)/io/CheckpointFileOutput.cpp'; then $(CYGPATH_W) '$(srcdir)/io/CheckpointFileOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/CheckpointFileOutput.cpp'; fi`

vc-CheckpointFileParse.o: $(srcdir)/io/CheckpointFileParse.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-CheckpointFileParse.o -MD -MP -MF $(DEPDIR)/vc-CheckpointFileParse.Tpo -c -o vc-CheckpointFileParse.o `test -f '$(srcdir)/io/CheckpointFileParse.cpp' || echo '$(srcdir)/'`$(srcdir)/io/CheckpointFileParse.cpp
	$(am__mv) $(DEPDIR)/vc-CheckpointFileParse.Tpo $(DEPDIR)/vc-CheckpointFileParse.Po
#	source='$(srcdir)/io/CheckpointFileParse.cpp' object='vc-CheckpointFileParse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-CheckpointFileParse.o `test -f '$(srcdir)/io/CheckpointFileParse.cpp' || echo '$(srcdir)/'`$(srcdir)/io/CheckpointFileParse.cpp

vc-CheckpointFileParse.obj: $(srcdir)/io/CheckpointFileParse.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-CheckpointFileParse.obj -MD -MP -MF $(DEPDIR)/vc-CheckpointFileParse.Tpo -c -o vc-CheckpointFileParse.obj `if test -f '$(srcdir)/io/CheckpointFileParse.cpp'; then $(CYGPATH_W) '$(srcdir)/io/CheckpointFileParse.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/CheckpointFileParse.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-CheckpointFileParse.Tpo $(DEPDIR)/vc-CheckpointFileParse.Po
#	source='$(srcdir)/io/CheckpointFileParse.cpp' object='vc-CheckpointFileParse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-CheckpointFileParse.obj `if test -f '$(srcdir)/io/CheckpointFileParse.cpp'; then $(CYGPATH_W) '$(srcdir)/io/CheckpointFileParse.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/CheckpointFileParse.cpp'; fi`

vc-EqSimFileOutput.o: $(srcdir)/io/EqSimFileOutput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-EqSimFileOutput.o -MD -MP -MF $(DEPDIR)/vc-EqSimFileOutput.Tpo -c -o vc-EqSimFileOutput.o `test -f '$(srcdir)/io/EqSimFileOutput.cpp' || echo '$(srcdir)/'`$(srcdir)/io/EqSimFileOutput.cpp
	$(am__mv) $(DEPDIR)/vc-EqSimFileOutput.Tpo $(DEPDIR)/vc-EqSimFileOutput.Po
#	source='$(srcdir)/io/EqSimFileOutput.cpp' object='vc-EqSimFileOutput.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-EqSimFileOutput.o `test -f '$(srcdir)/io/EqSimFileOutput.cpp' || echo '$(srcdir)/'`$(srcdir)/io/EqSimFileOutput.cpp

vc-EqSimFileOutput.obj: $(srcdir)/io/EqSimFileOutput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-EqSimFileOutput.obj -MD -MP -MF $(DEPDIR)/vc-EqSimFileOutput.Tpo -c -o vc-EqSimFileOutput.obj `if test -f '$(srcdir)/io/EqSimFileOutput.cpp'; then $(CYGPATH_W) '$(srcdir)/io/EqSimFileOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/EqSimFileOutput.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-EqSimFileOutput.Tpo $(DEPDIR)/vc-EqSimFileOutput.Po
#	source='$(srcdir)/io/EqSimFileOutput.cpp' object='vc-EqSimFileOutput.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-EqSimFileOutput.obj `if test -f '$(srcdir)/io/EqSimFileOutput.cpp'; then $(CYGPATH_W) '$(srcdir)/io/EqSimFileOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/EqSimFileOutput.cpp'; fi`

vc-EqSimFileParse.o: $(srcdir)/io/EqSimFileParse.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-EqSimFileParse.o -MD -MP -MF $(DEPDIR)/vc-EqSimFileParse.Tpo -c -o vc-EqSimFileParse.o `test -f '$(srcdir)/io/EqSimFileParse.cpp' || echo '$(srcdir)/'`$(srcdir)/io/EqSimFileParse.cpp
	$(am__mv) $(DEPDIR)/vc-EqSimFileParse.Tpo $(DEPDIR)/vc-EqSimFileParse.Po
#	source='$(srcdir)/io/EqSimFileParse.cpp' object='vc-EqSimFileParse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-EqSimFileParse.o `test -f '$(srcdir)/io/EqSimFileParse.cpp' || echo '$(srcdir)/'`$(srcdir)/io/EqSimFileParse.cpp

vc-EqSimFileParse.obj: $(srcdir)/io/EqSimFileParse.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-EqSimFileParse.obj -MD -MP -MF $(DEPDIR)/vc-EqSimFileParse.Tpo -c -o vc-EqSimFileParse.obj `if test -f '$(srcdir)/io/EqSimFileParse.cpp'; then $(CYGPATH_W) '$(srcdir)/io/EqSimFileParse.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/EqSimFileParse.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-EqSimFileParse.Tpo $(DEPDIR)/vc-EqSimFileParse.Po
#	source='$(srcdir)/io/EqSimFileParse.cpp' object='vc-EqSimFileParse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-EqSimFileParse.obj `if test -f '$(srcdir)/io/EqSimFileParse.cpp'; then $(CYGPATH_W) '$(srcdir)/io/EqSimFileParse.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/EqSimFileParse.cpp'; fi`

vc-GreensFileOutput.o: $(srcdir)/io/GreensFileOutput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-GreensFileOutput.o -MD -MP -MF $(DEPDIR)/vc-GreensFileOutput.Tpo -c -o vc-GreensFileOutput.o `test -f '$(srcdir)/io/GreensFileOutput.cpp' || echo '$(srcdir)/'`$(srcdir)/io/GreensFileOutput.cpp
	$(am__mv) $(DEPDIR)/vc-GreensFileOutput.Tpo $(DEPDIR)/vc-GreensFileOutput.Po
#	source='$(srcdir)/io/GreensFileOutput.cpp' object='vc-GreensFileOutput.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-GreensFileOutput.o `test -f '$(srcdir)/io/GreensFileOutput.cpp' || echo '$(srcdir)/'`$(srcdir)/io/GreensFileOutput.cpp

vc-GreensFileOutput.obj: $(srcdir)/io/GreensFileOutput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-GreensFileOutput.obj -MD -MP -MF $(DEPDIR)/vc-GreensFileOutput.Tpo -c -o vc-GreensFileOutput.obj `if test -f '$(srcdir)/io/GreensFileOutput.cpp'; then $(CYGPATH_W) '$(srcdir)/io/GreensFileOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/GreensFileOutput.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-GreensFileOutput.Tpo $(DEPDIR)/vc-GreensFileOutput.Po
#	source='$(srcdir)/io/GreensFileOutput.cpp' object='vc-GreensFileOutput.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-GreensFileOutput.obj `if test -f '$(srcdir)/io/GreensFileOutput.cpp'; then $(CYGPATH_W) '$(srcdir)/io/GreensFileOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/GreensFileOutput.cpp'; fi`

vc-HDF5Data.o: $(srcdir)/io/HDF5Data.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-HDF5Data.o -MD -MP -MF $(DEPDIR)/vc-HDF5Data.Tpo -c -o vc-HDF5Data.o `test -f '$(srcdir)/io/HDF5Data.cpp' || echo '$(srcdir)/'`$(srcdir)/io/HDF5Data.cpp
	$(am__mv) $(DEPDIR)/vc-HDF5Data.Tpo $(DEPDIR)/vc-HDF5Data.Po
#	source='$(srcdir)/io/HDF5Data.cpp' object='vc-HDF5Data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-HDF5Data.o `test -f '$(srcdir)/io/HDF5Data.cpp' || echo '$(srcdir)/'`$(srcdir)/io/HDF5Data.cpp

vc-HDF5Data.obj: $(srcdir)/io/HDF5Data.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-HDF5Data.obj -MD -MP -MF $(DEPDIR)/vc-HDF5Data.Tpo -c -o vc-HDF5Data.obj `if test -f '$(srcdir)/io/HDF5Data.cpp'; then $(CYGPATH_W) '$(srcdir)/io/HDF5Data.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/HDF5Data.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-HDF5Data.Tpo $(DEPDIR)/vc-HDF5Data.Po
#	source='$(srcdir)/io/HDF5Data.cpp' object='vc-HDF5Data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-HDF5Data.obj `if test -f '$(srcdir)/io/HDF5Data.cpp'; then $(CYGPATH_W) '$(srcdir)/io/HDF5Data.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/HDF5Data.cpp'; fi`

vc-HDF5DataShare.o: $(srcdir)/io/HDF5DataShare.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-HDF5DataShare.o -MD -MP -MF $(DEPDIR)/vc-HDF5DataShare.Tpo -c -o vc-HDF5DataShare.o `test -f '$(srcdir)/io/HDF5DataShare.cpp' || echo '$(srcdir)/'`$(srcdir)/io/HDF5DataShare.cpp
	$(am__mv) $(DEPDIR)/vc-HDF5DataShare.Tpo $(DEPDIR)/vc-HDF5DataShare.Po
#	source='$(srcdir)/io/HDF5DataShare.cpp' object='vc-HDF5DataShare.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-HDF5DataShare.o `test -f '$(srcdir)/io/HDF5DataShare.cpp' || echo '$(srcdir)/'`$(srcdir)/io/HDF5DataShare.cpp

vc-HDF5DataShare.obj: $(srcdir)/io/HDF5DataShare.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-HDF5DataShare.obj -MD -MP -MF $(DEPDIR)/vc-HDF5DataShare.Tpo -c -o vc-HDF5DataShare.obj `if test -f '$(srcdir)/io/HDF5DataShare.cpp'; then $(CYGPATH_W) '$(srcdir)/io/HDF5DataShare.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/HDF5DataShare.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-HDF5DataShare.Tpo $(DEPDIR)/vc-HDF5DataShare.Po
#	source='$(srcdir)/io/HDF5DataShare.cpp' object='vc-HDF5DataShare.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-HDF5DataShare.obj `if test -f '$(srcdir)/io/HDF5DataShare.cpp'; then $(CYGPATH_W) '$(srcdir)/io/HDF5DataShare.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/HDF5DataShare.cpp'; fi`

vc-SystemFileOutput.o: $(srcdir)/io/SystemFileOutput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-SystemFileOutput.o -MD -MP -MF $(DEPDIR)/vc-SystemFileOutput.Tpo -c -o vc-SystemFileOutput.o `test -f '$(srcdir)/io/SystemFileOutput.cpp' || echo '$(srcdir)/'`$(srcdir)/io/SystemFileOutput.cpp
	$(am__mv) $(DEPDIR)/vc-SystemFileOutput.Tpo $(DEPDIR)/vc-SystemFileOutput.Po
#	source='$(srcdir)/io/SystemFileOutput.cpp' object='vc-SystemFileOutput.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-SystemFileOutput.o `test -f '$(srcdir)/io/SystemFileOutput.cpp' || echo '$(srcdir)/'`$(srcdir)/io/SystemFileOutput.cpp

vc-SystemFileOutput.obj: $(srcdir)/io/SystemFileOutput.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-SystemFileOutput.obj -MD -MP -MF $(DEPDIR)/vc-SystemFileOutput.Tpo -c -o vc-SystemFileOutput.obj `if test -f '$(srcdir)/io/SystemFileOutput.cpp'; then $(CYGPATH_W) '$(srcdir)/io/SystemFileOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/SystemFileOutput.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-SystemFileOutput.Tpo $(DEPDIR)/vc-SystemFileOutput.Po
#	source='$(srcdir)/io/SystemFileOutput.cpp' object='vc-SystemFileOutput.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-SystemFileOutput.obj `if test -f '$(srcdir)/io/SystemFileOutput.cpp'; then $(CYGPATH_W) '$(srcdir)/io/SystemFileOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/io/SystemFileOutput.cpp'; fi`

vc-SimFramework.o: $(srcdir)/core/SimFramework.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-SimFramework.o -MD -MP -MF $(DEPDIR)/vc-SimFramework.Tpo -c -o vc-SimFramework.o `test -f '$(srcdir)/core/SimFramework.cpp' || echo '$(srcdir)/'`$(srcdir)/core/SimFramework.cpp
	$(am__mv) $(DEPDIR)/vc-SimFramework.Tpo $(DEPDIR)/vc-SimFramework.Po
#	source='$(srcdir)/core/SimFramework.cpp' object='vc-SimFramework.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-SimFramework.o `test -f '$(srcdir)/core/SimFramework.cpp' || echo '$(srcdir)/'`$(srcdir)/core/SimFramework.cpp

vc-SimFramework.obj: $(srcdir)/core/SimFramework.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-SimFramework.obj -MD -MP -MF $(DEPDIR)/vc-SimFramework.Tpo -c -o vc-SimFramework.obj `if test -f '$(srcdir)/core/SimFramework.cpp'; then $(CYGPATH_W) '$(srcdir)/core/SimFramework.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/SimFramework.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-SimFramework.Tpo $(DEPDIR)/vc-SimFramework.Po
#	source='$(srcdir)/core/SimFramework.cpp' object='vc-SimFramework.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-SimFramework.obj `if test -f '$(srcdir)/core/SimFramework.cpp'; then $(CYGPATH_W) '$(srcdir)/core/SimFramework.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/SimFramework.cpp'; fi`

vc-SimTimer.o: $(srcdir)/core/SimTimer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-SimTimer.o -MD -MP -MF $(DEPDIR)/vc-SimTimer.Tpo -c -o vc-SimTimer.o `test -f '$(srcdir)/core/SimTimer.cpp' || echo '$(srcdir)/'`$(srcdir)/core/SimTimer.cpp
	$(am__mv) $(DEPDIR)/vc-SimTimer.Tpo $(DEPDIR)/vc-SimTimer.Po
#	source='$(srcdir)/core/SimTimer.cpp' object='vc-SimTimer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-SimTimer.o `test -f '$(srcdir)/core/SimTimer.cpp' || echo '$(srcdir)/'`$(srcdir)/core/SimTimer.cpp

vc-SimTimer.obj: $(srcdir)/core/SimTimer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-SimTimer.obj -MD -MP -MF $(DEPDIR)/vc-SimTimer.Tpo -c -o vc-SimTimer.obj `if test -f '$(srcdir)/core/SimTimer.cpp'; then $(CYGPATH_W) '$(srcdir)/core/SimTimer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/SimTimer.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-SimTimer.Tpo $(DEPDIR)/vc-SimTimer.Po
#	source='$(srcdir)/core/SimTimer.cpp' object='vc-SimTimer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-SimTimer.obj `if test -f '$(srcdir)/core/SimTimer.cpp'; then $(CYGPATH_W) '$(srcdir)/core/SimTimer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/SimTimer.cpp'; fi`

vc-VCBlock.o: $(srcdir)/core/VCBlock.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCBlock.o -MD -MP -MF $(DEPDIR)/vc-VCBlock.Tpo -c -o vc-VCBlock.o `test -f '$(srcdir)/core/VCBlock.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCBlock.cpp
	$(am__mv) $(DEPDIR)/vc-VCBlock.Tpo $(DEPDIR)/vc-VCBlock.Po
#	source='$(srcdir)/core/VCBlock.cpp' object='vc-VCBlock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCBlock.o `test -f '$(srcdir)/core/VCBlock.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCBlock.cpp

vc-VCBlock.obj: $(srcdir)/core/VCBlock.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCBlock.obj -MD -MP -MF $(DEPDIR)/vc-VCBlock.Tpo -c -o vc-VCBlock.obj `if test -f '$(srcdir)/core/VCBlock.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCBlock.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCBlock.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-VCBlock.Tpo $(DEPDIR)/vc-VCBlock.Po
#	source='$(srcdir)/core/VCBlock.cpp' object='vc-VCBlock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCBlock.obj `if test -f '$(srcdir)/core/VCBlock.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCBlock.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCBlock.cpp'; fi`

vc-VCComm.o: $(srcdir)/core/VCComm.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCComm.o -MD -MP -MF $(DEPDIR)/vc-VCComm.Tpo -c -o vc-VCComm.o `test -f '$(srcdir)/core/VCComm.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCComm.cpp
	$(am__mv) $(DEPDIR)/vc-VCComm.Tpo $(DEPDIR)/vc-VCComm.Po
#	source='$(srcdir)/core/VCComm.cpp' object='vc-VCComm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCComm.o `test -f '$(srcdir)/core/VCComm.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCComm.cpp

vc-VCComm.obj: $(srcdir)/core/VCComm.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCComm.obj -MD -MP -MF $(DEPDIR)/vc-VCComm.Tpo -c -o vc-VCComm.obj `if test -f '$(srcdir)/core/VCComm.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCComm.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCComm.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-VCComm.Tpo $(DEPDIR)/vc-VCComm.Po
#	source='$(srcdir)/core/VCComm.cpp' object='vc-VCComm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCComm.obj `if test -f '$(srcdir)/core/VCComm.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCComm.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCComm.cpp'; fi`

vc-VCCommPartition.o: $(srcdir)/core/VCCommPartition.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCCommPartition.o -MD -MP -MF $(DEPDIR)/vc-VCCommPartition.Tpo -c -o vc-VCCommPartition.o `test -f '$(srcdir)/core/VCCommPartition.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCCommPartition.cpp
	$(am__mv) $(DEPDIR)/vc-VCCommPartition.Tpo $(DEPDIR)/vc-VCCommPartition.Po
#	source='$(srcdir)/core/VCCommPartition.cpp' object='vc-VCCommPartition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCCommPartition.o `test -f '$(srcdir)/core/VCCommPartition.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCCommPartition.cpp

vc-VCCommPartition.obj: $(srcdir)/core/VCCommPartition.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCCommPartition.obj -MD -MP -MF $(DEPDIR)/vc-VCCommPartition.Tpo -c -o vc-VCCommPartition.obj `if test -f '$(srcdir)/core/VCCommPartition.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCCommPartition.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCCommPartition.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-VCCommPartition.Tpo $(DEPDIR)/vc-VCCommPartition.Po
#	source='$(srcdir)/core/VCCommPartition.cpp' object='vc-VCCommPartition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCCommPartition.obj `if test -f '$(srcdir)/core/VCCommPartition.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCCommPartition.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCCommPartition.cpp'; fi`

vc-VCCommSpecExec.o: $(srcdir)/core/VCCommSpecExec.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCCommSpecExec.o -MD -MP -MF $(DEPDIR)/vc-VCCommSpecExec.Tpo -c -o vc-VCCommSpecExec.o `test -f '$(srcdir)/core/VCCommSpecExec.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCCommSpecExec.cpp
	$(am__mv) $(DEPDIR)/vc-VCCommSpecExec.Tpo $(DEPDIR)/vc-VCCommSpecExec.Po
#	source='$(srcdir)/core/VCCommSpecExec.cpp' object='vc-VCCommSpecExec.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCCommSpecExec.o `test -f '$(srcdir)/core/VCCommSpecExec.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCCommSpecExec.cpp

vc-VCCommSpecExec.obj: $(srcdir)/core/VCCommSpecExec.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCCommSpecExec.obj -MD -MP -MF $(DEPDIR)/vc-VCCommSpecExec.Tpo -c -o vc-VCCommSpecExec.obj `if test -f '$(srcdir)/core/VCCommSpecExec.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCCommSpecExec.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCCommSpecExec.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-VCCommSpecExec.Tpo $(DEPDIR)/vc-VCCommSpecExec.Po
#	source='$(srcdir)/core/VCCommSpecExec.cpp' object='vc-VCCommSpecExec.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCCommSpecExec.obj `if test -f '$(srcdir)/core/VCCommSpecExec.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCCommSpecExec.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCCommSpecExec.cpp'; fi`

vc-VCEvent.o: $(srcdir)/core/VCEvent.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCEvent.o -MD -MP -MF $(DEPDIR)/vc-VCEvent.Tpo -c -o vc-VCEvent.o `test -f '$(srcdir)/core/VCEvent.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCEvent.cpp
	$(am__mv) $(DEPDIR)/vc-VCEvent.Tpo $(DEPDIR)/vc-VCEvent.Po
#	source='$(srcdir)/core/VCEvent.cpp' object='vc-VCEvent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCEvent.o `test -f '$(srcdir)/core/VCEvent.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCEvent.cpp

vc-VCEvent.obj: $(srcdir)/core/VCEvent.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCEvent.obj -MD -MP -MF $(DEPDIR)/vc-VCEvent.Tpo -c -o vc-VCEvent.obj `if test -f '$(srcdir)/core/VCEvent.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCEvent.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCEvent.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-VCEvent.Tpo $(DEPDIR)/vc-VCEvent.Po
#	source='$(srcdir)/core/VCEvent.cpp' object='vc-VCEvent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCEvent.obj `if test -f '$(srcdir)/core/VCEvent.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCEvent.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCEvent.cpp'; fi`

vc-VCInitBlocks.o: $(srcdir)/core/VCInitBlocks.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCInitBlocks.o -MD -MP -MF $(DEPDIR)/vc-VCInitBlocks.Tpo -c -o vc-VCInitBlocks.o `test -f '$(srcdir)/core/VCInitBlocks.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCInitBlocks.cpp
	$(am__mv) $(DEPDIR)/vc-VCInitBlocks.Tpo $(DEPDIR)/vc-VCInitBlocks.Po
#	source='$(srcdir)/core/VCInitBlocks.cpp' object='vc-VCInitBlocks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCInitBlocks.o `test -f '$(srcdir)/core/VCInitBlocks.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCInitBlocks.cpp

vc-VCInitBlocks.obj: $(srcdir)/core/VCInitBlocks.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCInitBlocks.obj -MD -MP -MF $(DEPDIR)/vc-VCInitBlocks.Tpo -c -o vc-VCInitBlocks.obj `if test -f '$(srcdir)/core/VCInitBlocks.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCInitBlocks.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCInitBlocks.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-VCInitBlocks.Tpo $(DEPDIR)/vc-VCInitBlocks.Po
#	source='$(srcdir)/core/VCInitBlocks.cpp' object='vc-VCInitBlocks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCInitBlocks.obj `if test -f '$(srcdir)/core/VCInitBlocks.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCInitBlocks.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCInitBlocks.cpp'; fi`

vc-VCParams.o: $(srcdir)/core/VCParams.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCParams.o -MD -MP -MF $(DEPDIR)/vc-VCParams.Tpo -c -o vc-VCParams.o `test -f '$(srcdir)/core/VCParams.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCParams.cpp
	$(am__mv) $(DEPDIR)/vc-VCParams.Tpo $(DEPDIR)/vc-VCParams.Po
#	source='$(srcdir)/core/VCParams.cpp' object='vc-VCParams.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCParams.o `test -f '$(srcdir)/core/VCParams.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCParams.cpp

vc-VCParams.obj: $(srcdir)/core/VCParams.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCParams.obj -MD -MP -MF $(DEPDIR)/vc-VCParams.Tpo -c -o vc-VCParams.obj `if test -f '$(srcdir)/core/VCParams.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCParams.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCParams.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-VCParams.Tpo $(DEPDIR)/vc-VCParams.Po
#	source='$(srcdir)/core/VCParams.cpp' object='vc-VCParams.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCParams.obj `if test -f '$(srcdir)/core/VCParams.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCParams.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCParams.cpp'; fi`

vc-VCSimData.o: $(srcdir)/core/VCSimData.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCSimData.o -MD -MP -MF $(DEPDIR)/vc-VCSimData.Tpo -c -o vc-VCSimData.o `test -f '$(srcdir)/core/VCSimData.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCSimData.cpp
	$(am__mv) $(DEPDIR)/vc-VCSimData.Tpo $(DEPDIR)/vc-VCSimData.Po
#	source='$(srcdir)/core/VCSimData.cpp' object='vc-VCSimData.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCSimData.o `test -f '$(srcdir)/core/VCSimData.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCSimData.cpp

vc-VCSimData.obj: $(srcdir)/core/VCSimData.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCSimData.obj -MD -MP -MF $(DEPDIR)/vc-VCSimData.Tpo -c -o vc-VCSimData.obj `if test -f '$(srcdir)/core/VCSimData.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCSimData.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCSimData.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-VCSimData.Tpo $(DEPDIR)/vc-VCSimData.Po
#	source='$(srcdir)/core/VCSimData.cpp' object='vc-VCSimData.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCSimData.obj `if test -f '$(srcdir)/core/VCSimData.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCSimData.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCSimData.cpp'; fi`

vc-VCSimDataBlocks.o: $(srcdir)/core/VCSimDataBlocks.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCSimDataBlocks.o -MD -MP -MF $(DEPDIR)/vc-VCSimDataBlocks.Tpo -c -o vc-VCSimDataBlocks.o `test -f '$(srcdir)/core/VCSimDataBlocks.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCSimDataBlocks.cpp
	$(am__mv) $(DEPDIR)/vc-VCSimDataBlocks.Tpo $(DEPDIR)/vc-VCSimDataBlocks.Po
#	source='$(srcdir)/core/VCSimDataBlocks.cpp' object='vc-VCSimDataBlocks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCSimDataBlocks.o `test -f '$(srcdir)/core/VCSimDataBlocks.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCSimDataBlocks.cpp

vc-VCSimDataBlocks.obj: $(srcdir)/core/VCSimDataBlocks.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCSimDataBlocks.obj -MD -MP -MF $(DEPDIR)/vc-VCSimDataBlocks.Tpo -c -o vc-VCSimDataBlocks.obj `if test -f '$(srcdir)/core/VCSimDataBlocks.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCSimDataBlocks.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCSimDataBlocks.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-VCSimDataBlocks.Tpo $(DEPDIR)/vc-VCSimDataBlocks.Po
#	source='$(srcdir)/core/VCSimDataBlocks.cpp' object='vc-VCSimDataBlocks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCSimDataBlocks.obj `if test -f '$(srcdir)/core/VCSimDataBlocks.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCSimDataBlocks.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCSimDataBlocks.cpp'; fi`

vc-VCSimDataEvents.o: $(srcdir)/core/VCSimDataEvents.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCSimDataEvents.o -MD -MP -MF $(DEPDIR)/vc-VCSimDataEvents.Tpo -c -o vc-VCSimDataEvents.o `test -f '$(srcdir)/core/VCSimDataEvents.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCSimDataEvents.cpp
	$(am__mv) $(DEPDIR)/vc-VCSimDataEvents.Tpo $(DEPDIR)/vc-VCSimDataEvents.Po
#	source='$(srcdir)/core/VCSimDataEvents.cpp' object='vc-VCSimDataEvents.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCSimDataEvents.o `test -f '$(srcdir)/core/VCSimDataEvents.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCSimDataEvents.cpp

vc-VCSimDataEvents.obj: $(srcdir)/core/VCSimDataEvents.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCSimDataEvents.obj -MD -MP -MF $(DEPDIR)/vc-VCSimDataEvents.Tpo -c -o vc-VCSimDataEvents.obj `if test -f '$(srcdir)/core/VCSimDataEvents.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCSimDataEvents.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCSimDataEvents.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-VCSimDataEvents.Tpo $(DEPDIR)/vc-VCSimDataEvents.Po
#	source='$(srcdir)/core/VCSimDataEvents.cpp' object='vc-VCSimDataEvents.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCSimDataEvents.obj `if test -f '$(srcdir)/core/VCSimDataEvents.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCSimDataEvents.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCSimDataEvents.cpp'; fi`

vc-VCSimulation.o: $(srcdir)/core/VCSimulation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCSimulation.o -MD -MP -MF $(DEPDIR)/vc-VCSimulation.Tpo -c -o vc-VCSimulation.o `test -f '$(srcdir)/core/VCSimulation.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCSimulation.cpp
	$(am__mv) $(DEPDIR)/vc-VCSimulation.Tpo $(DEPDIR)/vc-VCSimulation.Po
#	source='$(srcdir)/core/VCSimulation.cpp' object='vc-VCSimulation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCSimulation.o `test -f '$(srcdir)/core/VCSimulation.cpp' || echo '$(srcdir)/'`$(srcdir)/core/VCSimulation.cpp

vc-VCSimulation.obj: $(srcdir)/core/VCSimulation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -MT vc-VCSimulation.obj -MD -MP -MF $(DEPDIR)/vc-VCSimulation.Tpo -c -o vc-VCSimulation.obj `if test -f '$(srcdir)/core/VCSimulation.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCSimulation.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCSimulation.cpp'; fi`
	$(am__mv) $(DEPDIR)/vc-VCSimulation.Tpo $(DEPDIR)/vc-VCSimulation.Po
#	source='$(srcdir)/core/VCSimulation.cpp' object='vc-VCSimulation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vc_CXXFLAGS) $(CXXFLAGS) -c -o vc-VCSimulation.obj `if test -f '$(srcdir)/core/VCSimulation.cpp'; then $(CYGPATH_W) '$(srcdir)/core/VCSimulation.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/core/VCSimulation.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool cscopelist ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
